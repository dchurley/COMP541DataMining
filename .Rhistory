"https://www.foxnews.com/category/politics/judiciary",
"https://www.foxnews.com/category/politics/foreign-policy")) {
links <- fox_news_linkscraper(remDr, category)
}
# FOX NEW WEBSCRAPER
for(category in list("https://www.foxnews.com/category/politics/executive",
"https://www.foxnews.com/category/politics/senate",
"https://www.foxnews.com/category/politics/house-of-representatives",
"https://www.foxnews.com/category/politics/judiciary",
"https://www.foxnews.com/category/politics/foreign-policy")) {
links <- fox_news_linkscraper(remDr, category)
for(link in links) {
result <- fox_news_webscraper(remDr, link)
print(result)
#insert_into_database(current_site, result[[1]], result[[2]], result[[3]], result[[4]])
}
}
id <- dbGetQuery(mysqlconnection, "SELECT COUNT(*) FROM Articles") + 1
as.integer(id)
id <- as.integer(dbGetQuery(mysqlconnection, "SELECT COUNT(*) FROM Articles") + 1)
View(tt)
gc()
gc()
# FOX NEW WEBSCRAPER
for(category in list("https://www.foxnews.com/category/politics/executive",
"https://www.foxnews.com/category/politics/senate",
"https://www.foxnews.com/category/politics/house-of-representatives",
"https://www.foxnews.com/category/politics/judiciary",
"https://www.foxnews.com/category/politics/foreign-policy")) {
links <- fox_news_linkscraper(remDr, category)
for(link in links) {
result <- fox_news_webscraper(remDr, link)
insert_into_database(current_site, result[[1]], result[[2]], result[[3]], result[[4]])
}
}
result <- fox_news_webscraper(remDr, link)
links
result <- fox_news_webscraper(remDr, link[[85]])
result <- fox_news_webscraper(remDr, links[[85]])
for(category in list("https://www.foxnews.com/category/politics/executive",
"https://www.foxnews.com/category/politics/senate",
"https://www.foxnews.com/category/politics/house-of-representatives",
"https://www.foxnews.com/category/politics/judiciary",
"https://www.foxnews.com/category/politics/foreign-policy")) {
links <- fox_news_linkscraper(remDr, category)
for(link in links) {
result <- fox_news_webscraper(remDr, link)
insert_into_database(current_site, result[[1]], result[[2]], result[[3]], result[[4]])
}
}
result
current_site
# FOX NEW WEBSCRAPER
current_site = "Fox News"
# Database input function
insert_into_database <- function(current_site, title, author, summary, text) {
# Do not insert data if text is null
if(!is.null(text)) {
print("Warning: Could not insert into database, text is NULL.")
return()
}
id <- as.integer(dbGetQuery(mysqlconnection, "SELECT COUNT(*) FROM Articles") + 1)
# Send into database
dbSendQuery(mysqlconnection, paste('SET @ID = ', id, ";"))
dbSendQuery(mysqlconnection, paste('SET @source = "', current_site, '";'))
dbSendQuery(mysqlconnection, paste('SET @title = "', title, '";'))
dbSendQuery(mysqlconnection, paste('SET @author = "', author, '";'))
dbSendQuery(mysqlconnection, paste('SET @summary = "', summary, '";'))
dbSendQuery(mysqlconnection, paste('SET @text = "', text, '";'))
dbSendQuery(mysqlconnection, paste('INSERT INTO', db_name, '(id, source, title, author, summary, text, rating)',
'VALUES(@ID, @source, @title, @author, @summary, @text, NULL)'))
result <- dbGetQuery(mysqlconnection, 'SELECT * FROM Articles WHERE ID = @id')
print(result)
id <- id + 1
}
# FOX NEW WEBSCRAPER
current_site = "Fox News"
for(category in list("https://www.foxnews.com/category/politics/executive",
"https://www.foxnews.com/category/politics/senate",
"https://www.foxnews.com/category/politics/house-of-representatives",
"https://www.foxnews.com/category/politics/judiciary",
"https://www.foxnews.com/category/politics/foreign-policy")) {
links <- fox_news_linkscraper(remDr, category)
for(link in links) {
result <- fox_news_webscraper(remDr, link)
insert_into_database(current_site, result[[1]], result[[2]], result[[3]], result[[4]])
}
}
source("fox_news_webscraper.R")
# FOX NEW WEBSCRAPER
current_site = "Fox News"
for(category in list("https://www.foxnews.com/category/politics/executive",
"https://www.foxnews.com/category/politics/senate",
"https://www.foxnews.com/category/politics/house-of-representatives",
"https://www.foxnews.com/category/politics/judiciary",
"https://www.foxnews.com/category/politics/foreign-policy")) {
links <- fox_news_linkscraper(remDr, category)
for(link in links) {
result <- fox_news_webscraper(remDr, link)
insert_into_database(current_site, result[[1]], result[[2]], result[[3]], result[[4]])
}
}
# Setup the RSelenium to the ChromeDriver initializing the "server"
rD <- RSelenium::rsDriver() # This might throw an error
# Assign the client to an object
remDr <- rD[["client"]]
# FOX NEW WEBSCRAPER
current_site = "Fox News"
for(category in list("https://www.foxnews.com/category/politics/executive",
"https://www.foxnews.com/category/politics/senate",
"https://www.foxnews.com/category/politics/house-of-representatives",
"https://www.foxnews.com/category/politics/judiciary",
"https://www.foxnews.com/category/politics/foreign-policy")) {
links <- fox_news_linkscraper(remDr, category)
for(link in links) {
result <- fox_news_webscraper(remDr, link)
insert_into_database(current_site, result[[1]], result[[2]], result[[3]], result[[4]])
}
}
fox_news_webscraper <- function(remDr, link) {
title <- NULL
author <- NULL
summary <- NULL
text <- NULL
print(link)
remDr$navigate(link)
Sys.sleep(2)
# Get Title
tryCatch({
title <- remDr$findElement("xpath", "/html[1]/body[1]/div[1]/div[1]/div[2]/div[1]/div[1]/article[1]/header[1]/h1[1]")
title <- title$getElementAttribute("innerText")
}, error = function(e) {
cat("Could not collect Title Information:", conditionMessage(e), "\n")
})
# Get Author
tryCatch({
author <- remDr$findElement("xpath", "/html[1]/body[1]/div[1]/div[1]/div[2]/div[1]/div[1]/article[1]/header[1]/div[3]/div[1]/span[1]/span[1]/a[1]")
author <- author$getElementAttribute("innerText")
}, error = function(e) {
cat("Could not collect Author Information:", conditionMessage(e), "\n")
})
tryCatch({
# Get Text
webElem <- remDr$findElement("xpath", "//body/div[@id='wrapper']/div[1]/div[2]/div[1]/div[1]/article[1]/div[1]/div[1]/div[1]")
text <- sapply(webElem$findChildElements("css", "p"), function(x){
x$getElementAttribute("innerText")
})
summary <- text[[1]]
}, error = function(e) {
cat("Could not collect Article Information:", conditionMessage(e), "\n")
})
# Get Summary & Cleanup Text
tryCatch({
for(paragraph in webElem$findChildElements("css", "p")[]) {
tryCatch({
webElem <- paragraph$findChildElement("css", "strong")
text <- (gsub(str_flatten(webElem$getElementAttribute("innerText")), '', text))
}, error = function(e) {cat()} )
}
}, error = function(e) {cat()})
text <- gsub('\"', '', str_flatten(text))
return(list(title, author, summary, text))
}
source("fox_news_webscraper.R")
# FOX NEW WEBSCRAPER
current_site = "Fox News"
for(category in list("https://www.foxnews.com/category/politics/executive",
"https://www.foxnews.com/category/politics/senate",
"https://www.foxnews.com/category/politics/house-of-representatives",
"https://www.foxnews.com/category/politics/judiciary",
"https://www.foxnews.com/category/politics/foreign-policy")) {
links <- fox_news_linkscraper(remDr, category)
for(link in links) {
result <- fox_news_webscraper(remDr, link)
insert_into_database(current_site, result[[1]], result[[2]], result[[3]], result[[4]])
}
}
fox_news_webscraper <- function(remDr, link) {
title <- NULL
author <- NULL
summary <- NULL
text <- NULL
print(link)
remDr$navigate(link)
Sys.sleep(2)
# Get Title
tryCatch({
title <- remDr$findElement("xpath", "/html[1]/body[1]/div[1]/div[1]/div[2]/div[1]/div[1]/article[1]/header[1]/h1[1]")
title <- title$getElementAttribute("innerText")
}, error = function(e) {
cat("Could not collect Title Information:", conditionMessage(e), "\n")
})
# Get Author
tryCatch({
author <- remDr$findElement("xpath", "/html[1]/body[1]/div[1]/div[1]/div[2]/div[1]/div[1]/article[1]/header[1]/div[3]/div[1]/span[1]/span[1]/a[1]")
author <- author$getElementAttribute("innerText")
}, error = function(e) {
cat("Could not collect Author Information:", conditionMessage(e), "\n")
})
tryCatch({
# Get Text
webElem <- remDr$findElement("xpath", "//body/div[@id='wrapper']/div[1]/div[2]/div[1]/div[1]/article[1]/div[1]/div[1]/div[1]")
text <- sapply(webElem$findChildElements("css", "p"), function(x){
x$getElementAttribute("innerText")
})
summary <- text[[1]]
}, error = function(e) {
cat("Could not collect Article Information:", conditionMessage(e), "\n")
})
print(paste("1", text))
# Get Summary & Cleanup Text
tryCatch({
for(paragraph in webElem$findChildElements("css", "p")[]) {
tryCatch({
webElem <- paragraph$findChildElement("css", "strong")
text <- (gsub(str_flatten(webElem$getElementAttribute("innerText")), '', text))
}, error = function(e) {cat()} )
}
}, error = function(e) {cat()})
print(paste("2", text))
text <- gsub('\"', '', str_flatten(text))
print(paste("3", text))
return(list(title, author, summary, text))
}
source("fox_news_webscraper.R")
# FOX NEW WEBSCRAPER
current_site = "Fox News"
for(category in list("https://www.foxnews.com/category/politics/executive",
"https://www.foxnews.com/category/politics/senate",
"https://www.foxnews.com/category/politics/house-of-representatives",
"https://www.foxnews.com/category/politics/judiciary",
"https://www.foxnews.com/category/politics/foreign-policy")) {
links <- fox_news_linkscraper(remDr, category)
for(link in links) {
result <- fox_news_webscraper(remDr, link)
insert_into_database(current_site, result[[1]], result[[2]], result[[3]], result[[4]])
}
}
# Database input function
insert_into_database <- function(current_site, title, author, summary, text) {
# Do not insert data if text is null
if(is.null(text)) {
print("Warning: Could not insert into database, text is NULL.")
return()
}
id <- as.integer(dbGetQuery(mysqlconnection, "SELECT COUNT(*) FROM Articles") + 1)
# Send into database
dbSendQuery(mysqlconnection, paste('SET @ID = ', id, ";"))
dbSendQuery(mysqlconnection, paste('SET @source = "', current_site, '";'))
dbSendQuery(mysqlconnection, paste('SET @title = "', title, '";'))
dbSendQuery(mysqlconnection, paste('SET @author = "', author, '";'))
dbSendQuery(mysqlconnection, paste('SET @summary = "', summary, '";'))
dbSendQuery(mysqlconnection, paste('SET @text = "', text, '";'))
dbSendQuery(mysqlconnection, paste('INSERT INTO', db_name, '(id, source, title, author, summary, text, rating)',
'VALUES(@ID, @source, @title, @author, @summary, @text, NULL)'))
result <- dbGetQuery(mysqlconnection, 'SELECT * FROM Articles WHERE ID = @id')
print(result)
id <- id + 1
}
id
fox_news_webscraper <- function(remDr, link) {
title <- NULL
author <- NULL
summary <- NULL
text <- NULL
print(link)
remDr$navigate(link)
Sys.sleep(2)
# Get Title
tryCatch({
title <- remDr$findElement("xpath", "/html[1]/body[1]/div[1]/div[1]/div[2]/div[1]/div[1]/article[1]/header[1]/h1[1]")
title <- title$getElementAttribute("innerText")
}, error = function(e) {
cat("Could not collect Title Information:", conditionMessage(e), "\n")
})
# Get Author
tryCatch({
author <- remDr$findElement("xpath", "/html[1]/body[1]/div[1]/div[1]/div[2]/div[1]/div[1]/article[1]/header[1]/div[3]/div[1]/span[1]/span[1]/a[1]")
author <- author$getElementAttribute("innerText")
}, error = function(e) {
cat("Could not collect Author Information:", conditionMessage(e), "\n")
})
tryCatch({
# Get Text
webElem <- remDr$findElement("xpath", "//body/div[@id='wrapper']/div[1]/div[2]/div[1]/div[1]/article[1]/div[1]/div[1]/div[1]")
text <- sapply(webElem$findChildElements("css", "p"), function(x){
x$getElementAttribute("innerText")
})
summary <- text[[1]]
}, error = function(e) {
cat("Could not collect Article Information:", conditionMessage(e), "\n")
})
# Get Summary & Cleanup Text
tryCatch({
for(paragraph in webElem$findChildElements("css", "p")[]) {
tryCatch({
webElem <- paragraph$findChildElement("css", "strong")
text <- (gsub(str_flatten(webElem$getElementAttribute("innerText")), '', text))
}, error = function(e) {cat()} )
}
}, error = function(e) {cat()})
text <- gsub('\"', '', str_flatten(text))
return(list(title, author, summary, text))
}
source("fox_news_webscraper.R")
source("fox_news_webscraper.R")
# Database input function
insert_into_database <- function(current_site, title, author, summary, text) {
# Do not insert data if text is null
if(is.null(text)) {
print("Warning: Could not insert into database, text is NULL.")
return()
}
id <- as.integer(dbGetQuery(mysqlconnection, "SELECT COUNT(*) FROM Articles") + 1)
# Send into database
dbSendQuery(mysqlconnection, paste('SET @ID = ', id, ";"))
dbSendQuery(mysqlconnection, paste('SET @source = "', current_site, '";'))
dbSendQuery(mysqlconnection, paste('SET @title = "', title, '";'))
dbSendQuery(mysqlconnection, paste('SET @author = "', author, '";'))
dbSendQuery(mysqlconnection, paste('SET @summary = "', summary, '";'))
dbSendQuery(mysqlconnection, paste('SET @text = "', text, '";'))
dbSendQuery(mysqlconnection, paste('INSERT INTO', db_name, '(id, source, title, author, summary, text, rating)',
'VALUES(@ID, @source, @title, @author, @summary, @text, NULL)'))
result <- dbGetQuery(mysqlconnection, 'SELECT * FROM Articles WHERE ID = @id')
print(result)
id <- id + 1
}
# FOX NEW WEBSCRAPER
current_site = "Fox News"
for(category in list("https://www.foxnews.com/category/politics/executive",
"https://www.foxnews.com/category/politics/senate",
"https://www.foxnews.com/category/politics/house-of-representatives",
"https://www.foxnews.com/category/politics/judiciary",
"https://www.foxnews.com/category/politics/foreign-policy")) {
links <- fox_news_linkscraper(remDr, category)
for(link in links) {
result <- fox_news_webscraper(remDr, link)
insert_into_database(current_site, result[[1]], result[[2]], result[[3]], result[[4]])
}
}
result[[2]]
result[[1]]
result[[1]]
result[[1]] <- gsub("'", "\'", result[[1]])
result[[1]]
result[[1]] <- gsub("‘", "\'", result[[1]])
result[[1]]
result[[1]] <- gsub("‘", "\\‘", result[[1]])
result[[1]]
result[[3]]
fox_news_linkscraper <- function(remDr, link) {
remDr$navigate(link)
webElem <- remDr$findElement("xpath", "//a[contains(text(),'Show More')]")
for(x in 1:10) {
webElem$clickElement()
Sys.sleep(1)
}
webElem <- remDr$findElement("xpath", "//body/div[@id='__nuxt']/div[@id='__layout']/div[@id='wrapper']/div[2]/div[3]/div[1]/main[1]/section[1]/div[1]")
links <- lapply(webElem$findChildElements("class", "article"), function(x) paste0(str_flatten(x$findChildElement("css", "a")$getElementAttribute("href")), ".amp"))
return(links)
}
result[[3]] <- gsub('\"', '', str_flatten(result[[3]]))
result[[3]]
insert_into_database(current_site, result[[1]], result[[2]], result[[3]], result[[4]])
dbSendQuery(mysqlconnection, "DELETE FROM Articles WHERE id > 397")
id
id <- as.integer(dbGetQuery(mysqlconnection, "SELECT COUNT(*) FROM Articles") + 1)
id
# FOX NEW WEBSCRAPER
current_site = "Fox News"
for(category in list("https://www.foxnews.com/category/politics/executive",
"https://www.foxnews.com/category/politics/senate",
"https://www.foxnews.com/category/politics/house-of-representatives",
"https://www.foxnews.com/category/politics/judiciary",
"https://www.foxnews.com/category/politics/foreign-policy")) {
links <- fox_news_linkscraper(remDr, category)
for(link in links) {
result <- fox_news_webscraper(remDr, link)
insert_into_database(current_site, result[[1]], result[[2]], result[[3]], result[[4]])
}
}
source("fox_news_webscraper.R")
# FOX NEW WEBSCRAPER
current_site = "Fox News"
for(category in list("https://www.foxnews.com/category/politics/executive",
"https://www.foxnews.com/category/politics/senate",
"https://www.foxnews.com/category/politics/house-of-representatives",
"https://www.foxnews.com/category/politics/judiciary",
"https://www.foxnews.com/category/politics/foreign-policy")) {
links <- fox_news_linkscraper(remDr, category)
for(link in links) {
result <- fox_news_webscraper(remDr, link)
insert_into_database(current_site, result[[1]], result[[2]], result[[3]], result[[4]])
}
}
id
id <- as.integer(dbGetQuery(mysqlconnection, "SELECT COUNT(*) FROM Articles") + 1)
id
links
library(rvest)
library(RSelenium)
library(RMySQL)
source("new_york_times_webscraper.R")
source("fox_news_webscraper.R")
# Setup database
mysqlconnection = dbConnect(RMySQL::MySQL(),
dbname='project',
host='150.230.44.118',
port=3306,
user='project',
password='COMP541',
local_infile = TRUE)
dbListTables(mysqlconnection)
db_name <- "Articles"
# Database input function
insert_into_database <- function(current_site, title, author, summary, text) {
# Do not insert data if text is null
if(is.null(text)) {
print("Warning: Could not insert into database, text is NULL.")
return()
}
id <- as.integer(dbGetQuery(mysqlconnection, "SELECT COUNT(*) FROM Articles") + 1)
# Send into database
dbSendQuery(mysqlconnection, paste('SET @ID = ', id, ";"))
dbSendQuery(mysqlconnection, paste('SET @source = "', current_site, '";'))
dbSendQuery(mysqlconnection, paste('SET @title = "', title, '";'))
dbSendQuery(mysqlconnection, paste('SET @author = "', author, '";'))
dbSendQuery(mysqlconnection, paste('SET @summary = "', summary, '";'))
dbSendQuery(mysqlconnection, paste('SET @text = "', text, '";'))
dbSendQuery(mysqlconnection, paste('INSERT INTO', db_name, '(id, source, title, author, summary, text, rating)',
'VALUES(@ID, @source, @title, @author, @summary, @text, NULL)'))
result <- dbGetQuery(mysqlconnection, 'SELECT * FROM Articles WHERE ID = @id')
print(result)
id <- id + 1
}
# Setup the RSelenium to the ChromeDriver initializing the "server"
rD <- RSelenium::rsDriver() # This might throw an error
# Assign the client to an object
remDr <- rD[["client"]]
# NEW YORK TIMES WEB SCRAPER
current_site <- "New York Times"
links <- new_york_times_linkscraper("https://www.nytimes.com/section/politics")
library(dplyr)
library(stringr)
library(purrr)
# NEW YORK TIMES WEB SCRAPER
current_site <- "New York Times"
links <- new_york_times_linkscraper("https://www.nytimes.com/section/politics")
library(dplyr)
library(stringr)
library(purrr)
library(rvest)
library(RSelenium)
library(RMySQL)
source("new_york_times_webscraper.R")
source("fox_news_webscraper.R")
# Setup database
mysqlconnection = dbConnect(RMySQL::MySQL(),
dbname='project',
host='150.230.44.118',
port=3306,
user='project',
password='COMP541',
local_infile = TRUE)
dbListTables(mysqlconnection)
db_name <- "Articles"
# Database input function
insert_into_database <- function(current_site, title, author, summary, text) {
# Do not insert data if text is null
if(is.null(text)) {
print("Warning: Could not insert into database, text is NULL.")
return()
}
id <- as.integer(dbGetQuery(mysqlconnection, "SELECT COUNT(*) FROM Articles") + 1)
# Send into database
dbSendQuery(mysqlconnection, paste('SET @ID = ', id, ";"))
dbSendQuery(mysqlconnection, paste('SET @source = "', current_site, '";'))
dbSendQuery(mysqlconnection, paste('SET @title = "', title, '";'))
dbSendQuery(mysqlconnection, paste('SET @author = "', author, '";'))
dbSendQuery(mysqlconnection, paste('SET @summary = "', summary, '";'))
dbSendQuery(mysqlconnection, paste('SET @text = "', text, '";'))
dbSendQuery(mysqlconnection, paste('INSERT INTO', db_name, '(id, source, title, author, summary, text, rating)',
'VALUES(@ID, @source, @title, @author, @summary, @text, NULL)'))
result <- dbGetQuery(mysqlconnection, 'SELECT * FROM Articles WHERE ID = @id')
print(result)
id <- id + 1
}
# Setup the RSelenium to the ChromeDriver initializing the "server"
rD <- RSelenium::rsDriver() # This might throw an error
# Assign the client to an object
remDr <- rD[["client"]]
# NEW YORK TIMES WEB SCRAPER
current_site <- "New York Times"
links <- new_york_times_linkscraper("https://www.nytimes.com/section/politics")
remDr$navigate("google.com")
links <- new_york_times_linkscraper("https://www.nytimes.com/section/politics")
source("new_york_times_webscraper.R")
source("fox_news_webscraper.R")
links <- new_york_times_linkscraper("https://www.nytimes.com/section/politics")
# FOX NEW WEBSCRAPER
current_site = "Fox News"
for(category in list("https://www.foxnews.com/category/politics/executive",
"https://www.foxnews.com/category/politics/senate",
"https://www.foxnews.com/category/politics/house-of-representatives",
"https://www.foxnews.com/category/politics/judiciary",
"https://www.foxnews.com/category/politics/foreign-policy")) {
links <- fox_news_linkscraper(remDr, category)
for(link in links) {
result <- fox_news_webscraper(remDr, link)
insert_into_database(current_site, result[[1]], result[[2]], result[[3]], result[[4]])
}
}
